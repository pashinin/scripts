# -*- mode: conf -*-
global
	log /dev/log	local0          # traffic (passing proxy)
	log /dev/log	local1 notice   # event logs (failing servers)
	chroot /var/lib/haproxy

    #stats socket /run/haproxy/admin.sock mode 660 level admin
    stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 10s

    # listen stats # Define a listen section called "stats"
    # bind :9000 # Listen on localhost:9000
    # mode http
    # stats enable  # Enable stats page
    # stats timeout 10s
    # stats hide-version  # Hide HAProxy version
    # stats realm Haproxy\ Statistics  # Title text for popup window
    # stats uri /haproxy_stats  # Stats URI
    # stats auth Username:Password  # Authentication credentials

	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log	global
	mode	http
    option redispatch  # if 1 backend failed - try another one
    option forwardfor  # pass real IP address to Nginx (or other services)
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


# HTTP
frontend http-in
         bind *:8080 name HTTP
         default_backend servers

backend servers
    server nginx-server 10.254.239.1:80 maxconn 32 check port 80
    server nginx-desktop 10.254.239.2:82 maxconn 32 check port 82 on-marked-down shutdown-sessions



# Redis
frontend ft_redis
    bind *:6380 name Redis
    mode tcp
    default_backend be_redis

# Problem 1: Error: Protocol error, got "H" as reply type byte
# Solution: I forgot to add: "mode tcp"
backend be_redis
    mode tcp
    # option redis-check
    option tcp-check
    tcp-check connect
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    server server 10.254.239.1:6379 check inter 2s
    server desktop 10.254.239.2:6379 check inter 2s


# Stats
# listen stats :1936
# port 9000 is used by Sentry
listen stats
    bind :9001
    mode http
    stats enable
    # stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    # stats auth Username:Password
